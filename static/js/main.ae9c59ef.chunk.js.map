{"version":3,"sources":["redux/blockchain/blockchainReducer.js","redux/data/dataReducer.js","redux/store.js","redux/data/dataActions.js","redux/blockchain/blockchainActions.js","styles/globalStyles.js","AccountModal/MetadataBox.js","AccountModal/NftModal.js","AccountModal/AccountModalCard.js","AccountModal/AccountModalPagination.js","AccountModal/AccountModal.js","App.js","reportWebVitals.js","index.js"],"names":["initialState","loading","account","smartContract","web3","errorMsg","blockchainReducer","state","action","type","payload","totalSupply","cost","error","dataReducer","rootReducer","combineReducers","blockchain","data","middleware","thunk","composeEnhancers","compose","applyMiddleware","store","createStore","fetchDataFailed","fetchData","dispatch","a","getState","methods","call","console","log","connectFailed","updateAccount","Screen","styled","div","image","SpacerXSmall","SpacerSmall","SpacerMedium","SpacerLarge","Container","flex","fd","jc","ai","test","TextTitle","p","TextDescription","MetadataBox","index","dataList","find","findIndex","metadata","templateColumns","gap","display","flexDirection","color","marginStart","rates","toFixed","Header","theme","extendTheme","components","Modal","baseStyle","dialog","maxWidth","minWidth","maxHeight","minHeight","bg","NftModal","isOpen","onClose","nftObject","isCentered","size","background","border","borderStyle","borderColor","borderRadius","px","fontSize","fontWeight","name","_hover","pt","width","borderStartColor","borderEndColor","borderTopColor","borderBottomColor","src","String","alt","pb","ml","lineHeight","GenerateCard","useDisclosure","onOpen","onClick","isActive","Card","className","Img","variant","renderData","columns","spacingY","map","todo","PaginationComponent","nftObjects","useState","setData","currentPage","setcurrentPage","itemsPerPage","pages","i","Math","ceil","length","push","indexOfLastItem","indexOfFirstItem","currentItems","slice","pageNumberLimit","maxPageNumberLimit","setmaxPageNumberLimit","minPageNumberLimit","setminPageNumberLimit","useEffect","handleClick","event","Number","target","id","renderPageNumbers","number","undefined","handleNextbtn","handlePrevbtn","pageIncrementBtn","pageDecrementBtn","disabled","AccountModal","tokensOfOwner","MakeArray","newArray","marginTop","mb","justifyContent","alignItems","height","textDecoration","deactivate","mt","alignContent","m","href","isExternal","borderBottomLeftRadius","borderBottomRightRadius","padding","StyledButton","button","StyledRoundButton","ResponsiveWrapper","StyledLogo","img","StyledImg","StyledLink","App","useDispatch","useSelector","set_cost","setTokensOfOwner","claimingNft","setClaimingNft","feedback","setFeedback","mintAmount","setMintAmount","CONTRACT_ADDRESS","SCAN_LINK","NETWORK","NAME","SYMBOL","ID","NFT_NAME","MAX_SUPPLY","WEI_COST","DISPLAY_COST","GAS_LIMIT","MARKETPLACE","MARKETPLACE_LINK","SHOW_BACKGROUND","CONFIG","SET_CONFIG","calcPrice","calculatePriceMultiple","then","receipt","getNfts","getData","getConfig","fetch","headers","Accept","configResponse","json","config","style","backgroundColor","boxShadow","textAlign","margin","e","window","open","preventDefault","abiResponse","abi","ethereum","isMetaMask","Web3EthContract","setProvider","Web3","request","method","accounts","SmartContractObj","on","location","reload","newMintAmount","decrementMintAmount","incrementMintAmount","gasLimit","totalCostWei","totalGasLimit","mintMultipleNFT","send","to","from","value","once","err","transform","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ae9c59ef.chunk.js","sourcesContent":["const initialState = {\r\n  loading: false,\r\n  account: null,\r\n  smartContract: null,\r\n  web3: null,\r\n  errorMsg: \"\",\r\n};\r\n\r\nconst blockchainReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"CONNECTION_REQUEST\":\r\n      return {\r\n        ...initialState,\r\n        loading: true,\r\n      };\r\n    case \"CONNECTION_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        account: action.payload.account,\r\n        smartContract: action.payload.smartContract,\r\n        web3: action.payload.web3,\r\n      };\r\n    case \"CONNECTION_FAILED\":\r\n      return {\r\n        ...initialState,\r\n        loading: false,\r\n        errorMsg: action.payload,\r\n      };\r\n    case \"UPDATE_ACCOUNT\":\r\n      return {\r\n        ...state,\r\n        account: action.payload.account,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default blockchainReducer;\r\n","const initialState = {\r\n  loading: false,\r\n  totalSupply: 0,\r\n  cost: 0,\r\n  error: false,\r\n  errorMsg: \"\",\r\n};\r\n\r\nconst dataReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"CHECK_DATA_REQUEST\":\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: false,\r\n        errorMsg: \"\",\r\n      };\r\n    case \"CHECK_DATA_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        totalSupply: action.payload.totalSupply,\r\n        // cost: action.payload.cost,\r\n        error: false,\r\n        errorMsg: \"\",\r\n      };\r\n    case \"CHECK_DATA_FAILED\":\r\n      return {\r\n        ...initialState,\r\n        loading: false,\r\n        error: true,\r\n        errorMsg: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default dataReducer;\r\n","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\r\nimport dataReducer from \"./data/dataReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  blockchain: blockchainReducer,\r\n  data: dataReducer,\r\n});\r\n\r\nconst middleware = [thunk];\r\nconst composeEnhancers = compose(applyMiddleware(...middleware));\r\n\r\nconst configureStore = () => {\r\n  return createStore(rootReducer, composeEnhancers);\r\n};\r\n\r\nconst store = configureStore();\r\n\r\nexport default store;\r\n","// log\r\nimport store from \"../store\";\r\n\r\nconst fetchDataRequest = () => {\r\n  return {\r\n    type: \"CHECK_DATA_REQUEST\",\r\n  };\r\n};\r\n\r\nconst fetchDataSuccess = (payload) => {\r\n  return {\r\n    type: \"CHECK_DATA_SUCCESS\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst fetchDataFailed = (payload) => {\r\n  return {\r\n    type: \"CHECK_DATA_FAILED\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nexport const fetchData = () => {\r\n  return async (dispatch) => {\r\n    dispatch(fetchDataRequest());\r\n    try {\r\n      let totalSupply = await store\r\n        .getState()\r\n        .blockchain.smartContract.methods.totalSupply()\r\n        .call();\r\n      // let cost = await store\r\n      //   .getState()\r\n      //   .blockchain.smartContract.methods.cost()\r\n      //   .call();\r\n\r\n      dispatch(\r\n        fetchDataSuccess({\r\n          totalSupply,\r\n          // cost,\r\n        })\r\n      );\r\n    } catch (err) {\r\n      console.log(err);\r\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\r\n    }\r\n  };\r\n};\r\n","// constants\r\nimport Web3EthContract from \"web3-eth-contract\";\r\nimport Web3 from \"web3\";\r\n// log\r\nimport { fetchData } from \"../data/dataActions\";\r\n\r\nconst connectRequest = () => {\r\n  return {\r\n    type: \"CONNECTION_REQUEST\",\r\n  };\r\n};\r\n\r\nconst connectSuccess = (payload) => {\r\n  return {\r\n    type: \"CONNECTION_SUCCESS\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst connectFailed = (payload) => {\r\n  return {\r\n    type: \"CONNECTION_FAILED\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst updateAccountRequest = (payload) => {\r\n  return {\r\n    type: \"UPDATE_ACCOUNT\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nexport const connect = () => {\r\n  return async (dispatch) => {\r\n    dispatch(connectRequest());\r\n    const abiResponse = await fetch(\"/config/abi.json\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    });\r\n    const abi = await abiResponse.json();\r\n    const configResponse = await fetch(\"/config/config.json\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    });\r\n    const CONFIG = await configResponse.json();\r\n    const { ethereum } = window;\r\n    const metamaskIsInstalled = ethereum && ethereum.isMetaMask;\r\n    if (metamaskIsInstalled) {\r\n      Web3EthContract.setProvider(ethereum);\r\n      let web3 = new Web3(ethereum);\r\n      try {\r\n        const accounts = await ethereum.request({\r\n          method: \"eth_requestAccounts\",\r\n        });\r\n        const networkId = await ethereum.request({\r\n          method: \"net_version\",\r\n        });\r\n        if (networkId == CONFIG.NETWORK.ID) {\r\n          const SmartContractObj = new Web3EthContract(\r\n            abi,\r\n            CONFIG.CONTRACT_ADDRESS\r\n          );\r\n          dispatch(\r\n            connectSuccess({\r\n              account: accounts[0],\r\n              smartContract: SmartContractObj,\r\n              web3: web3,\r\n            })\r\n          );\r\n          // Add listeners start\r\n          ethereum.on(\"accountsChanged\", (accounts) => {\r\n            dispatch(updateAccount(accounts[0])); \r\n          });\r\n          ethereum.on(\"chainChanged\", () => {\r\n            window.location.reload();\r\n          });\r\n          // Add listeners end\r\n        } else {\r\n          dispatch(connectFailed(`Change network to ${CONFIG.NETWORK.NAME}.`));\r\n        }\r\n      } catch (err) {\r\n        dispatch(connectFailed(\"Something went wrong.\"));\r\n      }\r\n    } else {\r\n      dispatch(connectFailed(\"Install Metamask.\"));\r\n    }\r\n  };\r\n};\r\n\r\nexport const updateAccount = (account) => {\r\n  return async (dispatch) => {\r\n    dispatch(updateAccountRequest({ account: account }));\r\n    dispatch(fetchData(account));\r\n  };\r\n};\r\n","import styled from \"styled-components\";\r\n\r\n// Used for wrapping a page component\r\nexport const Screen = styled.div`\r\n  background-color: var(--primary);\r\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\r\n  background-size: cover;\r\n  background-position: center;\r\n  width: 100%;\r\n  min-height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerXSmall = styled.div`\r\n  height: 8px;\r\n  width: 8px;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerSmall = styled.div`\r\n  height: 16px;\r\n  width: 16px;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerMedium = styled.div`\r\n  height: 24px;\r\n  width: 24px;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerLarge = styled.div`\r\n  height: 32px;\r\n  width: 32px;\r\n`;\r\n\r\n// Used for providing a wrapper around a component\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex: ${({ flex }) => (flex ? flex : 0)};\r\n  flex-direction: ${({ fd }) => (fd ? fd : \"column\")};\r\n  justify-content: ${({ jc }) => (jc ? jc : \"flex-start\")};\r\n  align-items: ${({ ai }) => (ai ? ai : \"flex-start\")};\r\n  background-color: ${({ test }) => (test ? \"pink\" : \"none\")};\r\n  width: 100%;\r\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\r\n  background-size: cover;\r\n  background-position: center;\r\n`;\r\n\r\nexport const TextTitle = styled.p`\r\n  color: var(--primary-text);\r\n  font-size: 22px;\r\n  font-weight: 500;\r\n  line-height: 1.6;\r\n`;\r\n\r\nexport const TextSubTitle = styled.p`\r\n  color: var(--primary-text);\r\n  font-size: 18px;\r\n  line-height: 1.6;\r\n`;\r\n\r\nexport const TextDescription = styled.p`\r\n  color: var(--primary-text);\r\n  font-size: 16px;\r\n  line-height: 1.6;\r\n`;\r\n\r\nexport const StyledClickable = styled.div`\r\n  :active {\r\n    opacity: 0.6;\r\n  }\r\n`;\r\n","import { Text, Grid, GridItem } from '@chakra-ui/react';\r\n\r\nimport metadata from './parsedData.json';\r\nimport rates from './nftRates.json';\r\n\r\nconst MetadataBox = ({ index }) => {\r\n    const findIndex = (data, index) => {\r\n      const dataList = data.find((dataList) => dataList.index === index);\r\n      return dataList && dataList.index; \r\n    }\r\n    const data = findIndex(metadata, index-1);\r\n\r\n    return(<Grid templateColumns='repeat(2, 1fr)' gap={4}>\r\n            <GridItem display={\"flex\"} flexDirection={\"row\"}>\r\n              <Text color={\"white\"}>Background: </Text>\r\n              <Text color={\"white\"} marginStart={\"1em\"}>{metadata[data]['Background']}</Text>\r\n            </GridItem>\r\n            <GridItem display={\"flex\"} flexDirection={\"row\"}>\r\n              <Text color={\"white\"}>Rate:</Text>\r\n              <Text color={\"white\"} marginStart={\"1em\"}>{(rates['Background'][metadata[data]['Background']] * 100 / 3333).toFixed(2)}%</Text>\r\n            </GridItem>\r\n            <GridItem display={\"flex\"} flexDirection={\"row\"}>\r\n              <Text color={\"white\"}>Fur: </Text>\r\n              <Text color={\"white\"} marginStart={\"1em\"}>{metadata[data]['Fur']}</Text>\r\n            </GridItem>\r\n            <GridItem display={\"flex\"} flexDirection={\"row\"}>\r\n              <Text color={\"white\"}>Rate:</Text>\r\n              <Text color={\"white\"} marginStart={\"1em\"}>{(rates['Fur'][metadata[data]['Fur']] * 100 / 3333).toFixed(2)}%</Text>\r\n            </GridItem>\r\n            <GridItem display={\"flex\"} flexDirection={\"row\"}>\r\n              <Text color={\"white\"}>Base: </Text>\r\n              <Text color={\"white\"} marginStart={\"1em\"}>{metadata[data]['Base']}</Text>\r\n            </GridItem>\r\n            <GridItem display={\"flex\"} flexDirection={\"row\"}>\r\n              <Text color={\"white\"}>Rate:</Text>\r\n              <Text color={\"white\"} marginStart={\"1em\"}>{(rates['Base'][metadata[data]['Base']] * 100 / 3333).toFixed(2)}%</Text>\r\n            </GridItem>\r\n            <GridItem display={\"flex\"} flexDirection={\"row\"}>\r\n              <Text color={\"white\"}>Hair-Hats: </Text>\r\n              <Text color={\"white\"} marginStart={\"1em\"}>{metadata[data]['Hair-Hats']}</Text>\r\n            </GridItem>\r\n            <GridItem display={\"flex\"} flexDirection={\"row\"}>\r\n              <Text color={\"white\"}>Rate:</Text>\r\n              <Text color={\"white\"} marginStart={\"1em\"}>{(rates['Hair-Hats'][metadata[data]['Hair-Hats']] * 100 / 3333).toFixed(2)}%</Text>\r\n            </GridItem>\r\n            <GridItem display={\"flex\"} flexDirection={\"row\"}>\r\n              <Text color={\"white\"}>Injuries: </Text>\r\n              <Text color={\"white\"} marginStart={\"1em\"}>{metadata[data]['Injuries']}</Text>\r\n            </GridItem>\r\n            <GridItem display={\"flex\"} flexDirection={\"row\"}>\r\n              <Text color={\"white\"}>Rate:</Text>\r\n              <Text color={\"white\"} marginStart={\"1em\"}>{(rates['Injuries'][metadata[data]['Injuries']] * 100 / 3333).toFixed(2)}%</Text>\r\n            </GridItem>\r\n            <GridItem display={\"flex\"} flexDirection={\"row\"}>\r\n              <Text color={\"white\"}>Mouth: </Text>\r\n              <Text color={\"white\"} marginStart={\"1em\"}>{metadata[data]['Mouth']}</Text>\r\n            </GridItem>\r\n            <GridItem display={\"flex\"} flexDirection={\"row\"}>\r\n              <Text color={\"white\"}>Rate:</Text>\r\n              <Text color={\"white\"} marginStart={\"1em\"}>{(rates['Mouth'][metadata[data]['Mouth']] * 100 / 3333).toFixed(2)}%</Text>\r\n            </GridItem>\r\n          </Grid>);\r\n}\r\n\r\nexport default MetadataBox;\r\n","import styled       from \"styled-components\";\r\nimport MetadataBox  from \"./MetadataBox\";\r\n\r\nimport {\r\n  Box,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  Text,\r\n  extendTheme,\r\n  ChakraProvider,\r\n  Image\r\n} from \"@chakra-ui/react\";\r\n\r\nexport const Header = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst theme = extendTheme({\r\n  components: {\r\n    Modal: {\r\n      baseStyle: () => ({\r\n        dialog: { \r\n          maxWidth: [\"80%\", \"80%\", \"80%\"],\r\n          minWidth: \"95%\",\r\n          maxHeight: [\"80%\", \"80%\", \"80%\"],\r\n          minHeight: \"95%\",\r\n          bg: \"#00ff00\"\r\n        }\r\n      })//chakra-modal--body1\r\n    }\r\n  }\r\n});\r\n\r\nexport default function NftModal({ isOpen, onClose, nftObject }) {\r\n  \r\n  return (\r\n    <ChakraProvider theme={theme}>\r\n    <Modal isOpen={isOpen} onClose={onClose} isCentered size=\"sm\">\r\n      <ModalOverlay />\r\n      <ModalContent background=\"gray.900\" border=\"1px\" borderStyle=\"solid\" borderColor=\"gray.700\" borderRadius=\"3xl\" >\r\n        <ModalHeader color=\"white\" px={4} fontSize=\"lg\" fontWeight=\"medium\"> {nftObject.name} </ModalHeader>\r\n        <ModalCloseButton\r\n          color=\"white\" fontSize=\"sm\"\r\n          _hover={{ color: \"whiteAlpha.700\" }}\r\n        />\r\n        <Header>\r\n          <ModalBody pt={0} px={1.5}>\r\n            <Box borderRadius=\"2.2em\" border=\"5px\" borderStyle=\"solid\" borderColor=\"gray.600\" width={\"400px\"} \r\n              borderStartColor={\"blue\"} borderEndColor={\"blue\"} borderTopColor={\"blue\"} borderBottomColor={\"blue\"}>\r\n              <Image src={\"https://fudgy.mypinata.cloud/ipfs/QmaHvkGj9ooAiDwDsVCdoUTbYqJfU5txQA8mR7xLYQwZKj/\" + String(nftObject[\"edition\"]) + \".png\"} alt=\"Rekt Apes\" \r\n              borderRadius={\"2em\"} width={\"400px\"}/>\r\n            </Box>\r\n            <Box  px={5} pt={4} pb={2} width={\"400px\"} >\r\n              <Text color=\"white\" fontSize=\"xl\" fontWeight=\"semibold\" ml=\"2\" lineHeight=\"1.1\">Metadata:</Text>\r\n              <MetadataBox index={nftObject[\"edition\"]}/> \r\n            </Box>\r\n          </ModalBody>\r\n        </Header>\r\n      </ModalContent>\r\n    </Modal>\r\n    </ChakraProvider>\r\n  );\r\n}\r\n","//import { ApeObject as NFTObject } from \"./ApeObject\";\r\nimport { Card, } from \"react-bootstrap\";\r\nimport { Box, Button, useDisclosure } from '@chakra-ui/react';\r\n\r\nimport NftModal from \"./NftModal\";\r\nimport \"@fontsource/inter\";\r\n\r\n//interface Props { nftObject?: NFTObject; }\r\nexport function GenerateCard({ nftObject }) {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  return nftObject ? (\r\n    <>\r\n      <Button onClick={onOpen} background=\"transparent\" isActive={false}>\r\n        <Card className=\"modal-card\">\r\n          <Card.Img variant=\"top\" src={\"https://fudgy.mypinata.cloud/ipfs/QmaHvkGj9ooAiDwDsVCdoUTbYqJfU5txQA8mR7xLYQwZKj/\" + nftObject[\"edition\"] + \".png\"} />\r\n          <div className=\"overlay\"># {nftObject[\"edition\"]}</div>\r\n        </Card>\r\n      </Button>\r\n      <NftModal isOpen={isOpen} onClose={onClose} nftObject={nftObject}/>\r\n      </>\r\n  ) : (<Box>{`${console.log(\"GenerateCard failed: \", nftObject)}`}</Box>);\r\n}\r\n\r\n","import { useEffect, useState } from \"react\";\r\nimport { SimpleGrid, Button } from '@chakra-ui/react';\r\n\r\nimport { GenerateCard } from \"./AccountModalCard\";\r\nimport \"./modal.css\";\r\n\r\nconst renderData = (data) => {\r\n  return (\r\n    <SimpleGrid columns={3} spacingY={28}>{data.map((todo, index) => {\r\n      return <li key={index} className=\"item\" ><GenerateCard nftObject = {data[index]} /></li>;\r\n    })}</SimpleGrid>\r\n  );\r\n};\r\n\r\n///@Dev - Only create a grid of paginated card objects given inputted data of type NFTObject[]\r\nfunction PaginationComponent({ nftObjects }) {\r\n  console.log(\"nftObjects: \", nftObjects)\r\n  const [data, setData] = useState([]);\r\n  const [currentPage, setcurrentPage] = useState(1);\r\n  const [itemsPerPage, setitemsPerPage] = useState(6);\r\n  const pages = [];\r\n  for (let i = 1; i <= Math.ceil(data.length / itemsPerPage); i++) { pages.push(i); }\r\n  if(pages.length == 0) pages.push(1);\r\n  console.log(\"pages: \", pages)\r\n\r\n  const indexOfLastItem = currentPage*itemsPerPage;\r\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\r\n  const currentItems = data.slice(indexOfFirstItem, indexOfLastItem);\r\n\r\n  const [pageNumberLimit, setpageNumberLimit] = useState(5);\r\n  const [maxPageNumberLimit, setmaxPageNumberLimit] = useState(5);\r\n  const [minPageNumberLimit, setminPageNumberLimit] = useState(0);\r\n\r\n  useEffect(() => { setData(nftObjects); }, [pages]);\r\n  const handleClick = (event) => { setcurrentPage(Number(event.target.id)); };\r\n  \r\n  const renderPageNumbers = pages.map((number) => {\r\n    if (number < maxPageNumberLimit + 1 && number > minPageNumberLimit) {\r\n      return (<li key={number} id={number} onClick={handleClick} className={currentPage == number ? \"active\" : undefined} > {number} </li>);\r\n    } else { return undefined; }\r\n  });\r\n  \r\n    const handleNextbtn = () => {\r\n    setcurrentPage(currentPage + 1);\r\n\r\n    if (currentPage + 1 > maxPageNumberLimit) {\r\n      setmaxPageNumberLimit(maxPageNumberLimit + pageNumberLimit);\r\n      setminPageNumberLimit(minPageNumberLimit + pageNumberLimit);\r\n    }\r\n  };\r\n\r\n  const handlePrevbtn = () => {\r\n    setcurrentPage(currentPage - 1);\r\n\r\n    if ((currentPage - 1) % pageNumberLimit == 0) {\r\n      setmaxPageNumberLimit(maxPageNumberLimit - pageNumberLimit);\r\n      setminPageNumberLimit(minPageNumberLimit - pageNumberLimit);\r\n    }\r\n  };\r\n  \r\n  let pageIncrementBtn = null;\r\n  let pageDecrementBtn = null;\r\n  if (pages.length > maxPageNumberLimit) { pageIncrementBtn = <li onClick={handleNextbtn}> &hellip; </li>; }\r\n  if (minPageNumberLimit >= 1)           { pageDecrementBtn = <li onClick={handlePrevbtn}> &hellip; </li>; }\r\n\r\n  return (\r\n    <>\r\n      {renderData(currentItems)}\r\n\r\n      <ul className=\"pageNumbers\">\r\n        <Button onClick={handlePrevbtn} disabled={currentPage == pages[0] ? true : false} > Prev </Button>\r\n        {pageDecrementBtn}\r\n        {renderPageNumbers}\r\n        {pageIncrementBtn}\r\n        <Button onClick={handleNextbtn} disabled={currentPage == pages[pages.length - 1] ? true : false} > Next </Button>\r\n      </ul>\r\n   \r\n    </>\r\n  );\r\n}\r\n\r\nexport default PaginationComponent;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  Flex,\r\n  Link,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  Text,\r\n  Grid\r\n} from \"@chakra-ui/react\";\r\n\r\nimport metadata                         from './metadata.json';\r\nimport PaginationComponent              from './AccountModalPagination';\r\n\r\nexport function AccountModal({ isOpen, onClose, tokensOfOwner, account }) {\r\n  const [data, setData] = useState([]);\r\n\r\n  function MakeArray() {\r\n      let newArray = [];\r\n      for(let index=0; index<=tokensOfOwner.length; index++) { newArray = [...newArray, metadata[index-1]]}\r\n      return newArray;\r\n  }\r\n  \r\n  useEffect(() => { setData(MakeArray); }, [tokensOfOwner])\r\n\r\n  function handleDeactivateAccount() {\r\n    deactivate();\r\n    onClose();\r\n  }\r\n\r\n  return (\r\n    <Modal isOpen={isOpen} onClose={onClose} isCentered size=\"md\">\r\n      <ModalOverlay /> \r\n      <ModalContent background=\"gray.900\" border=\"1px\" borderStyle=\"solid\" borderColor=\"gray.700\" borderRadius=\"3xl\" marginTop=\"220px\">\r\n        <ModalHeader color=\"white\" px={4} fontSize=\"lg\" fontWeight=\"medium\"> Account </ModalHeader>\r\n        <ModalCloseButton color=\"white\" fontSize=\"sm\" _hover={{ color: \"whiteAlpha.700\" }} />\r\n        <ModalBody pt={0} px={4}>\r\n          <Box borderRadius=\"3xl\" border=\"1px\" borderStyle=\"solid\" borderColor=\"gray.600\" px={5} pt={4} pb={2} mb={3} >\r\n            <Flex justifyContent=\"space-between\" alignItems=\"center\" mb={3}>\r\n              <Text color=\"gray.400\" fontSize=\"sm\"> Connected with MetaMask </Text>\r\n              <Button\r\n                variant=\"outline\"\r\n                size=\"sm\"\r\n                borderColor=\"blue.800\"\r\n                borderRadius=\"3xl\"\r\n                color=\"blue.500\"\r\n                fontSize=\"13px\"\r\n                fontWeight=\"normal\"\r\n                px={2}\r\n                height=\"26px\"\r\n                _hover={{ background: \"none\", borderColor: \"blue.300\", textDecoration: \"underline\" }}\r\n                onClick={handleDeactivateAccount}\r\n              > Change </Button>\r\n            </Flex>\r\n            <Flex alignItems=\"center\" mt={2} mb={4} lineHeight={1}>\r\n              <Text color=\"white\" fontSize=\"xl\" fontWeight=\"semibold\" ml=\"2\" lineHeight=\"1.1\"> \r\n                {`${account && account.slice(0, 6)}...${account && account.slice(account.length - 4, account.length)}`}\r\n              </Text>\r\n            </Flex>\r\n            <Flex alignContent=\"center\" m={3}>\r\n              <Link\r\n                fontSize=\"sm\"\r\n                display=\"flex\"\r\n                alignItems=\"center\"\r\n                href={`https://cronos.org/explorer/address/${account}`}\r\n                isExternal\r\n                color=\"gray.400\"\r\n                ml={6}\r\n                _hover={{ color: \"whiteAlpha.800\", textDecoration: \"underline\" }}\r\n              >\r\n                View on Explorer\r\n              </Link>\r\n            </Flex>\r\n          </Box>\r\n        </ModalBody>\r\n\r\n        <ModalFooter \r\n          justifyContent=\"end\"\r\n          background=\"gray.700\"\r\n          borderBottomLeftRadius=\"3xl\"\r\n          borderBottomRightRadius=\"3xl\"\r\n          height=\"600px\"\r\n          padding= \"10px\"\r\n        >\r\n          <Grid className=\"modal-footer\">\r\n          <div className=\"modal-footer-balance\">Balance: {tokensOfOwner.length}</div>\r\n          <PaginationComponent nftObjects = {data} />\r\n        </Grid>\r\n        </ModalFooter>\r\n      </ModalContent>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { connect } from \"./redux/blockchain/blockchainActions\";\r\nimport { fetchData } from \"./redux/data/dataActions\";\r\nimport * as s from \"./styles/globalStyles\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { AccountModal } from \"./AccountModal/AccountModal\";\r\nimport { ChakraProvider, useDisclosure } from \"@chakra-ui/react\";\r\n\r\nconst truncate = (input, len) =>\r\n  input.length > len ? `${input.substring(0, len)}...` : input;\r\n\r\nexport const StyledButton = styled.button`\r\n  padding: 10px;\r\n  border-radius: 50px;\r\n  border: none;\r\n  background-color: var(--secondary);\r\n  padding: 10px;\r\n  font-weight: bold;\r\n  color: var(--secondary-text);\r\n  width: 100px;\r\n  cursor: pointer;\r\n  box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\r\n  -webkit-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\r\n  -moz-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\r\n  :active {\r\n    box-shadow: none;\r\n    -webkit-box-shadow: none;\r\n    -moz-box-shadow: none;\r\n  }\r\n`;\r\n\r\nexport const StyledRoundButton = styled.button`\r\n  padding: 10px;\r\n  border-radius: 100%;\r\n  border: none;\r\n  background-color: var(--primary);\r\n  padding: 10px;\r\n  font-weight: bold;\r\n  font-size: 15px;\r\n  color: var(--primary-text);\r\n  width: 30px;\r\n  height: 30px;\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\r\n  -webkit-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\r\n  -moz-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\r\n  :active {\r\n    box-shadow: none;\r\n    -webkit-box-shadow: none;\r\n    -moz-box-shadow: none;\r\n  }\r\n`;\r\n\r\nexport const ResponsiveWrapper = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  justify-content: stretched;\r\n  align-items: stretched;\r\n  width: 100%;\r\n  @media (min-width: 767px) {\r\n    flex-direction: row;\r\n  }\r\n`;\r\n\r\nexport const StyledLogo = styled.img`\r\n  width: 200px;\r\n  @media (min-width: 767px) {\r\n    width: 600px;\r\n  }\r\n  transition: width 0.5s;\r\n  transition: height 0.5s;\r\n`;\r\n\r\nexport const StyledImg = styled.img`\r\n  box-shadow: 0px 5px 11px 2px rgba(0, 0, 0, 0.7);\r\n  border: 4px var(--tertiary);\r\n  background-color: var(--accent);\r\n  border-radius: 100%;\r\n  width: 200px;\r\n  @media (min-width: 900px) {\r\n    width: 250px;\r\n  }\r\n  @media (min-width: 1000px) {\r\n    width: 300px;\r\n  }\r\n  transition: width 0.5s;\r\n`;\r\n\r\nexport const StyledLink = styled.a`\r\n  color: var(--secondary);\r\n  text-decoration: none;\r\n`;\r\n\r\nfunction App() {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const dispatch = useDispatch();\r\n  const blockchain = useSelector((state) => state.blockchain);\r\n  const data = useSelector((state) => state.data);\r\n  const [ _cost, set_cost ] = useState(1000000000000);\r\n  const [ tokensOfOwner, setTokensOfOwner ] = useState([]);\r\n  const [claimingNft, setClaimingNft] = useState(false);\r\n  const [feedback, setFeedback] = useState(`Click buy to mint your NFT.`);\r\n  const [mintAmount, setMintAmount] = useState(1);\r\n  const [CONFIG, SET_CONFIG] = useState({\r\n    CONTRACT_ADDRESS: \"\",\r\n    SCAN_LINK: \"\",\r\n    NETWORK: {\r\n      NAME: \"\",\r\n      SYMBOL: \"\",\r\n      ID: 0,\r\n    },\r\n    NFT_NAME: \"\",\r\n    SYMBOL: \"\",\r\n    MAX_SUPPLY: 1,\r\n    WEI_COST: 0,\r\n    DISPLAY_COST: 0,\r\n    GAS_LIMIT: 0,\r\n    MARKETPLACE: \"\",\r\n    MARKETPLACE_LINK: \"\",\r\n    SHOW_BACKGROUND: false,\r\n  }); \r\n\r\n  const claimNFTs = () => {\r\n    //let cost = CONFIG.WEI_COST;\r\n    blockchain.smartContract.methods\r\n      .calculatePriceMultiple(mintAmount)\r\n      .call()\r\n      .then((receipt) => {\r\n        let cost = receipt;\r\n        let gasLimit = CONFIG.GAS_LIMIT;\r\n        let totalCostWei = receipt;\r\n        let totalGasLimit = String(gasLimit * mintAmount);\r\n        console.log(\"Cost: \", totalCostWei);\r\n        console.log(\"Gas limit: \", totalGasLimit);\r\n        setFeedback(`Minting your ${CONFIG.NFT_NAME}...`);\r\n        setClaimingNft(true);\r\n        blockchain.smartContract.methods\r\n          .mintMultipleNFT(mintAmount)\r\n          .send({\r\n            gasLimit: String(totalGasLimit),\r\n            to: CONFIG.CONTRACT_ADDRESS,\r\n            from: blockchain.account,\r\n            value: totalCostWei,\r\n          })\r\n          .once(\"error\", (err) => {\r\n            console.log(err);\r\n            setFeedback(\"Sorry, something went wrong please try again later.\");\r\n            setClaimingNft(false);\r\n          })\r\n          .then((receipt) => {\r\n            console.log(receipt);\r\n            setFeedback(\r\n              `These ${CONFIG.NFT_NAME} are all yours! Click the button below to view!`\r\n            );\r\n            setClaimingNft(false);\r\n            dispatch(fetchData(blockchain.account));\r\n          });\r\n        getData();\r\n      });\r\n\r\n    // let cost = _cost;\r\n    // let gasLimit = CONFIG.GAS_LIMIT;\r\n    // let totalCostWei = String(cost * mintAmount);\r\n    // let totalGasLimit = String(gasLimit * mintAmount);\r\n    // console.log(\"Cost: \", totalCostWei);\r\n    // console.log(\"Gas limit: \", totalGasLimit);\r\n    // setFeedback(`Minting your ${CONFIG.NFT_NAME}...`);\r\n    // setClaimingNft(true);\r\n    // blockchain.smartContract.methods\r\n    //   .mintMultipleNFT(mintAmount)\r\n    //   .send({\r\n    //     gasLimit: String(totalGasLimit),\r\n    //     to: CONFIG.CONTRACT_ADDRESS,\r\n    //     from: blockchain.account,\r\n    //     value: totalCostWei,\r\n    //   })\r\n    //   .once(\"error\", (err) => {\r\n    //     console.log(err);\r\n    //     setFeedback(\"Sorry, something went wrong please try again later.\");\r\n    //     setClaimingNft(false);\r\n    //   })\r\n    //   .then((receipt) => {\r\n    //     console.log(receipt);\r\n    //     setFeedback(\r\n    //       `These ${CONFIG.NFT_NAME} are all yours! Click the button below to view!`\r\n    //     );\r\n    //     setClaimingNft(false);\r\n    //     dispatch(fetchData(blockchain.account));\r\n    //   });\r\n    // getData();\r\n  };\r\n\r\n  const calcPrice = () => {\r\n    blockchain.smartContract.methods\r\n      .calculatePriceMultiple(mintAmount)\r\n      .call()\r\n      .then((receipt) => {\r\n        set_cost(receipt);\r\n        dispatch(fetchData(blockchain.account));\r\n      });\r\n  };\r\n\r\n  const getNfts = () => {\r\n    blockchain.smartContract.methods\r\n      .tokensOfOwner(blockchain.account)\r\n      .call()\r\n      .then((receipt) => {\r\n        setTokensOfOwner(receipt);\r\n        dispatch(fetchData(blockchain.account));\r\n      });\r\n  };\r\n\r\n  const decrementMintAmount = () => {\r\n    let newMintAmount = mintAmount - 1;\r\n    if (newMintAmount < 1) {\r\n      newMintAmount = 1;\r\n    }\r\n    setMintAmount(newMintAmount);\r\n    calcPrice();\r\n  };\r\n\r\n  const incrementMintAmount = () => {\r\n    let newMintAmount = mintAmount + 1;\r\n    if (newMintAmount > 25) {\r\n      newMintAmount = 25;\r\n    }\r\n    setMintAmount(newMintAmount);\r\n    calcPrice();\r\n  };\r\n\r\n  const getData = () => {\r\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\r\n      dispatch(fetchData(blockchain.account));\r\n      getNfts();\r\n    }\r\n  };\r\n\r\n  const getConfig = async () => {\r\n    const configResponse = await fetch(\"/config/config.json\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    });\r\n    const config = await configResponse.json();\r\n    SET_CONFIG(config);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getConfig();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [blockchain.account]);\r\n\r\n  return (\r\n    \r\n    <s.Screen>\r\n      <s.Container\r\n        flex={1}\r\n        ai={\"center\"}\r\n        style={{ padding: 24, backgroundColor: \"var(--primary)\" }}\r\n        image={CONFIG.SHOW_BACKGROUND ? \"/config/images/bg.png\" : null}\r\n      >\r\n        <a href={CONFIG.MARKETPLACE_LINK}>\r\n          <StyledLogo alt={\"logo\"} src={\"/config/images/old_logo2.png\"} />\r\n        </a>\r\n        <s.SpacerSmall />\r\n        <ResponsiveWrapper flex={1} style={{ padding: 24 }} test>\r\n          <s.Container flex={1} jc={\"center\"} ai={\"center\"}>\r\n            <StyledImg alt={\"example\"} src={\"/config/images/example2.gif\"} />\r\n          </s.Container>\r\n          <s.SpacerLarge />\r\n          <s.Container\r\n            flex={2}\r\n            jc={\"center\"}\r\n            ai={\"center\"}\r\n            style={{\r\n              backgroundColor: \"var(--accent)\",\r\n              padding: 24,\r\n              borderRadius: 24,\r\n              border: \"4px var(--tertiary)\",\r\n              boxShadow: \"0px 5px 11px 2px rgba(0,0,0,0.7)\",\r\n            }}\r\n          >\r\n            <s.TextTitle\r\n              style={{\r\n                textAlign: \"center\",\r\n                fontSize: 50,\r\n                fontWeight: \"bold\",\r\n                color: \"var(--accent-text)\",\r\n              }}\r\n            >\r\n              {data.totalSupply} / {CONFIG.MAX_SUPPLY}\r\n            </s.TextTitle>\r\n            <s.TextDescription\r\n              style={{\r\n                textAlign: \"center\",\r\n                color: \"var(--primary-text)\",\r\n              }}\r\n            >\r\n              <StyledLink target={\"_blank\"} href={CONFIG.SCAN_LINK}>\r\n                {\"View Contract on Cronoscan\"}\r\n              </StyledLink>\r\n            </s.TextDescription>\r\n            <span\r\n              style={{\r\n                textAlign: \"center\",\r\n              }}\r\n            >\r\n              {/* <StyledButton\r\n                onClick={(e) => {\r\n                  window.open(\"/config/roadmap.pdf\", \"_blank\");\r\n                }}\r\n                style={{\r\n                  margin: \"5px\",\r\n                }}\r\n              >\r\n                Roadmap\r\n              </StyledButton> */}\r\n              <StyledButton\r\n                style={{\r\n                  margin: \"5px\",\r\n                }}\r\n                onClick={(e) => {\r\n                  window.open(CONFIG.MARKETPLACE_LINK, \"_blank\");\r\n                }}\r\n              >\r\n                {CONFIG.MARKETPLACE}\r\n              </StyledButton>\r\n            </span>\r\n            <s.SpacerSmall />\r\n            {Number(data.totalSupply) >= CONFIG.MAX_SUPPLY ? (\r\n              <>\r\n                <s.TextTitle\r\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\r\n                >\r\n                  The sale has ended.\r\n                </s.TextTitle>\r\n                <s.TextDescription\r\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\r\n                >\r\n                  You can still find {CONFIG.NFT_NAME} on\r\n                </s.TextDescription>\r\n                <s.SpacerSmall />\r\n                <StyledLink target={\"_blank\"} href={CONFIG.MARKETPLACE_LINK}>\r\n                  {CONFIG.MARKETPLACE}\r\n                </StyledLink> \r\n              </>\r\n            ) : ( \r\n              <>\r\n                <s.TextTitle\r\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\r\n                >\r\n                  1 {CONFIG.SYMBOL} costs {CONFIG.DISPLAY_COST}{\" \"} \r\n                  {CONFIG.NETWORK.SYMBOL}.\r\n                </s.TextTitle>\r\n                <s.SpacerXSmall />\r\n                <s.TextDescription\r\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\r\n                >\r\n                  {/* Excluding gas fees. */}\r\n                  Rekt Apes is a true-to-reality collection\r\n                  showcasing what happens to cute lil' apes when they stare at the moon too long.\r\n                </s.TextDescription>\r\n                <s.SpacerSmall />\r\n                {blockchain.account === \"\" ||\r\n                blockchain.smartContract === null ? (\r\n                  <s.Container ai={\"center\"} jc={\"center\"}> \r\n                    <s.TextDescription\r\n                      style={{\r\n                        textAlign: \"center\",\r\n                        color: \"var(--accent-text)\",\r\n                      }}\r\n                    >\r\n                      Connect to the {CONFIG.NETWORK.NAME} network\r\n                    </s.TextDescription>\r\n                    <s.SpacerSmall />\r\n                    <StyledButton\r\n                      onClick={(e) => {\r\n                        e.preventDefault();\r\n                        dispatch(connect());\r\n                        getData();\r\n                      }}\r\n                    >\r\n                      CONNECT\r\n                    </StyledButton>\r\n                    {blockchain.errorMsg !== \"\" ? (\r\n                      <>\r\n                        <s.SpacerSmall />\r\n                        <s.TextDescription\r\n                          style={{\r\n                            textAlign: \"center\",\r\n                            color: \"var(--accent-text)\",\r\n                          }}\r\n                        >\r\n                          {blockchain.errorMsg}\r\n                        </s.TextDescription>\r\n                      </>\r\n                    ) : null}\r\n                  </s.Container>\r\n                ) : (\r\n                  <>\r\n                    <s.TextDescription\r\n                      style={{\r\n                        textAlign: \"center\",\r\n                        color: \"var(--accent-text)\",\r\n                      }}\r\n                    >\r\n                      {feedback}\r\n                    </s.TextDescription>\r\n                    <s.SpacerMedium />\r\n                    <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\r\n                      <StyledRoundButton\r\n                        style={{ lineHeight: 0.4 }}\r\n                        disabled={claimingNft ? 1 : 0}\r\n                        onClick={(e) => {\r\n                          e.preventDefault();\r\n                          decrementMintAmount();\r\n                          getData();\r\n                        }}\r\n                      >\r\n                        -\r\n                      </StyledRoundButton>\r\n                      <s.SpacerMedium />\r\n                      <s.TextDescription\r\n                        style={{\r\n                          textAlign: \"center\",\r\n                          color: \"var(--accent-text)\",\r\n                        }}\r\n                      >\r\n                        {mintAmount}\r\n                      </s.TextDescription>\r\n                      <s.SpacerMedium />\r\n                      <StyledRoundButton\r\n                        disabled={claimingNft ? 1 : 0}\r\n                        onClick={(e) => {\r\n                          e.preventDefault();\r\n                          incrementMintAmount();\r\n                          getNfts();\r\n                          getData();\r\n                        }}\r\n                      >\r\n                        +\r\n                      </StyledRoundButton>\r\n                    </s.Container>\r\n                    <s.SpacerSmall />\r\n                    <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\r\n                      <StyledButton\r\n                        disabled={claimingNft ? 1 : 0}\r\n                        onClick={(e) => {\r\n                          e.preventDefault();\r\n                          claimNFTs();\r\n                          getData();\r\n                        }}\r\n                      >\r\n                        {claimingNft ? \"BUSY\" : \"BUY\"}\r\n                      </StyledButton>\r\n                    </s.Container>\r\n                    <s.SpacerSmall />\r\n                    <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\r\n                      <StyledButton\r\n                        disabled={claimingNft ? 1 : 0}\r\n                        onClick={onOpen}\r\n                      >\r\n                        {\"MY NFTS\"}\r\n                      </StyledButton>\r\n                      <ChakraProvider>\r\n                            <AccountModal isOpen={isOpen} onClose={onClose} tokensOfOwner={tokensOfOwner} account={blockchain.account}/>\r\n                      </ChakraProvider>\r\n                    </s.Container>\r\n                  </>\r\n                )}\r\n              </>\r\n            )}\r\n            <s.SpacerMedium />\r\n          </s.Container>\r\n          <s.SpacerLarge />\r\n          <s.Container flex={1} jc={\"center\"} ai={\"center\"}>\r\n            <StyledImg\r\n              alt={\"example\"}\r\n              src={\"/config/images/example3.gif\"}\r\n              style={{ transform: \"scaleX(-1)\" }}\r\n            />\r\n          </s.Container>\r\n        </ResponsiveWrapper>\r\n        <s.SpacerMedium />\r\n        <s.Container jc={\"center\"} ai={\"center\"} style={{ width: \"70%\" }}>\r\n          <s.TextDescription\r\n            style={{\r\n              textAlign: \"center\",\r\n              color: \"var(--primary-text)\",\r\n            }}\r\n          >\r\n            Please make sure you are connected to the right network (\r\n            {CONFIG.NETWORK.NAME} Mainnet) and the correct address. Please note:\r\n            Once you make the purchase, you cannot undo this action.\r\n          </s.TextDescription>\r\n          <s.SpacerSmall />\r\n          <s.TextDescription \r\n            style={{\r\n              textAlign: \"center\",\r\n              color: \"var(--primary-text)\",\r\n            }}\r\n          >\r\n            We have set the gas limit to {CONFIG.GAS_LIMIT} for the contract to\r\n            successfully mint your NFT. We recommend that you don't lower the\r\n            gas limit.\r\n          </s.TextDescription>\r\n        </s.Container>\r\n      </s.Container>\r\n    </s.Screen>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport store from \"./redux/store\";\r\nimport { Provider } from \"react-redux\";\r\nimport \"./styles/reset.css\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}